using LocalizationManager.ViewModels;
using System;
using System.Data;
using System.Diagnostics;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Forms;

namespace LocalizationManager.Views {
    public partial class MainWindow : Window {
        public MainWindow() {
            InitializeComponent();

            (DataContext as MainViewModel).DataTableUpdated += (sender, args) => {
                dataGrid1.AutoGenerateColumns = false;
                dataGrid1.AutoGenerateColumns = true;
            };
        }

        private void SaveButton_OnClick(object sender, RoutedEventArgs e) {
            (DataContext as MainViewModel).SaveChangesToResxFiles(((DataView)dataGrid1.ItemsSource).ToTable());
        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e) {
            double columnWidth = dataGrid1.Width / dataGrid1.Columns.Count;

            for (int i = 2; i < dataGrid1.Columns.Count; i++) {
                dataGrid1.Columns[i].Width = 200;
            }

            dataGrid1.Columns[0].Width = 50;
            dataGrid1.Columns[1].Width = new DataGridLength(1, DataGridLengthUnitType.Star);
        }

        private void DataGrid_CellEditEnding(object sender, DataGridCellEditEndingEventArgs e) {
            int colIndex = dataGrid1.Columns.IndexOf(e.Column);

            if (colIndex < dataGrid1.Columns.Count - 1) {
                e.Cancel = true;
                dataGrid1.CurrentCell = new DataGridCellInfo(dataGrid1.CurrentCell.Item, dataGrid1.Columns[colIndex + 1]);
                dataGrid1.BeginEdit();
            }
        }

        private void DataGrid_RowEditEnding(object sender, DataGridRowEditEndingEventArgs e) {
            MainViewModel vm = DataContext as MainViewModel;

            vm.Callback_OnRowEditEnding(sender, e);

            int rowIndex = e.Row.GetIndex();
            int colIndex = dataGrid1.CurrentCell.Column.DisplayIndex;

            Debug.WriteLine("EVENT: DataGrid_RowEditEnding");
            Debug.WriteLine($"    ROW: {rowIndex}    COL: {colIndex}");
            Debug.WriteLine($"    SELECTED INDEX: {dataGrid1.SelectedIndex}");

            int altIndex = dataGrid1.Items.IndexOf(e.Row.Item);

            Debug.WriteLine($"    ALT INDEX: {altIndex}");

            dataGrid1.CurrentCell = new DataGridCellInfo(dataGrid1.Items[dataGrid1.Items.Count - 1], dataGrid1.Columns[1]);
            dataGrid1.SelectedIndex++;
        }

        private void ScanButton_OnClick(object sender, RoutedEventArgs e) {
            (DataContext as MainViewModel).FindMissingLocalizations();
        }

        private void SolutionDirectoryTextBox_OnMouseDoubleClick(object sender, System.Windows.Input.MouseButtonEventArgs e) {
            FolderBrowserDialog fbd = new FolderBrowserDialog();
            fbd.ShowNewFolderButton = false;
            fbd.Description = "Select solution folder ...";
            fbd.ShowDialog();

            (DataContext as MainViewModel).SolutionPath = fbd.SelectedPath;
        }

        private void dataGrid1_CurrentCellChanged(object sender, EventArgs e) {
            if (!dataGrid1.CurrentCell.IsValid)
                (DataContext as MainViewModel).SelectedColumnIndex = -1;
            else
                (DataContext as MainViewModel).SelectedColumnIndex = dataGrid1.CurrentCell.Column.DisplayIndex;
        }

        private void DeleteButton_OnClick(object sender, RoutedEventArgs e) {

        }


        private void DataGrid_Sorting(object sender, DataGridSortingEventArgs e) {

        }

        private void DataGrid_LayoutUpdated(object sender, EventArgs e) {

        }
    }
}
